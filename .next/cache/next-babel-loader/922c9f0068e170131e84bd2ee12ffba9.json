{"ast":null,"code":"var _jsxFileName = \"/Users/adesegunadedeji/Documents/blairbnb.com/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../comps/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown'; // const Index = props =>(\n//     <Layout>\n//         <h1>Lets Watch Batman</h1>\n//         <ul>\n//         {props.shows.map(show => (\n//             <li key={show.id}>\n//                 <Link href=\"/p/[id]\" as ={`/p/${show.id}`}>\n//                 <a>{show.name}</a>\n//                     </Link>\n//             </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n// Index.getInitialProps = async function () {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//     const data = await res.json()\n//     console.log(`Show  fetch data, Count: ${data.length}`)\n//     return {\n//         shows: data.map(entry=>entry.show)\n//     }\n// };\n// export default Index\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, post.title)));\n};\n\nexport default function Blog() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-357181001\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-357181001\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, getPosts().map(function (post) {\n    return __jsx(PostLink, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"357181001\",\n    __self: this\n  }, \"h1.jsx-357181001,a.jsx-357181001{font-family:'Arial';}ul.jsx-357181001{padding:0;}li.jsx-357181001{list-style:none;margin:5px 0;}a.jsx-357181001{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-357181001:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZGVzZWd1bmFkZWRlamkvRG9jdW1lbnRzL2JsYWlyYm5iLmNvbS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RG9CLEFBSWlDLEFBSVYsQUFJTSxBQUtLLEFBS1QsVUFiZCxFQWNBLElBVmUsSUFSZixTQVNBLHFCQUlhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2FkZXNlZ3VuYWRlZGVqaS9Eb2N1bWVudHMvYmxhaXJibmIuY29tL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wcy9MYXlvdXQnXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJ1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcblxuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PihcblxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICAgIDxoMT5MZXRzIFdhdGNoIEJhdG1hbjwvaDE+XG4vLyAgICAgICAgIDx1bD5cbi8vICAgICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuLy8gICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXMgPXtgL3AvJHtzaG93LmlkfWB9PlxuLy8gICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICA8L2xpPlxuLy8gICAgICAgICAgICAgKSl9XG4vLyAgICAgICAgIDwvdWw+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyBJbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJylcbi8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKVxuLy8gICAgIGNvbnNvbGUubG9nKGBTaG93ICBmZXRjaCBkYXRhLCBDb3VudDogJHtkYXRhLmxlbmd0aH1gKVxuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICAgIHNob3dzOiBkYXRhLm1hcChlbnRyeT0+ZW50cnkuc2hvdylcbi8vICAgICB9XG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBJbmRleFxuZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHsgaWQ6ICdoZWxsby1uZXh0anMnLCB0aXRsZTogJ0hlbGxvIE5leHQuanMnIH0sXG4gICAgICB7IGlkOiAnbGVhcm4tbmV4dGpzJywgdGl0bGU6ICdMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWUnIH0sXG4gICAgICB7IGlkOiAnZGVwbG95LW5leHRqcycsIHRpdGxlOiAnRGVwbG95IGFwcHMgd2l0aCBaRUlUJyB9XG4gICAgXTtcbiAgfVxuICBcbiAgY29uc3QgUG9zdExpbmsgPSAoeyBwb3N0IH0pID0+IChcbiAgICA8bGk+XG4gICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtwb3N0LmlkfWB9PlxuICAgICAgICA8YT57cG9zdC50aXRsZX08L2E+XG4gICAgICA8L0xpbms+XG4gICAgPC9saT5cbiAgKTtcbiAgXG4gIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMYXlvdXQ+XG4gICAgICAgIDxoMT5NeSBCbG9nPC9oMT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtnZXRQb3N0cygpLm1hcChwb3N0ID0+IChcbiAgICAgICAgICAgIDxQb3N0TGluayBrZXk9e3Bvc3QuaWR9IHBvc3Q9e3Bvc3R9IC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBoMSxcbiAgICAgICAgICBhIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICAgIH1cbiAgXG4gICAgICAgICAgdWwge1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB9XG4gIFxuICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICBtYXJnaW46IDVweCAwO1xuICAgICAgICAgIH1cbiAgXG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgICB9XG4gIFxuICAgICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgKTtcbiAgfVxuXG4iXX0= */\\n/*@ sourceURL=/Users/adesegunadedeji/Documents/blairbnb.com/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/adesegunadedeji/Documents/blairbnb.com/pages/index.js"],"names":["Link","Layout","fetch","Markdown","getPosts","id","title","PostLink","post","Blog","map"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,SAASC,QAAT,GAAoB;AAChB,SAAO,CACL;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHK,CAAP;AAKD;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,IAAI,CAACH,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAI,CAACF,KAAT,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,eAAe,SAASG,IAAT,GAAgB;AAC7B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,GAAGM,GAAX,CAAe,UAAAF,IAAI;AAAA,WAClB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACH,EAApB;AAAwB,MAAA,IAAI,EAAEG,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAnB,CADH,CAFF;AAAA;AAAA;AAAA,u0GADF;AAkCD","sourcesContent":["import Link from 'next/link'\nimport Layout from '../comps/Layout'\nimport fetch from 'isomorphic-unfetch'\nimport Markdown from 'react-markdown';\n\n// const Index = props =>(\n\n//     <Layout>\n//         <h1>Lets Watch Batman</h1>\n//         <ul>\n//         {props.shows.map(show => (\n//             <li key={show.id}>\n//                 <Link href=\"/p/[id]\" as ={`/p/${show.id}`}>\n//                 <a>{show.name}</a>\n//                     </Link>\n//             </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n\n// Index.getInitialProps = async function () {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//     const data = await res.json()\n//     console.log(`Show  fetch data, Count: ${data.length}`)\n//     return {\n//         shows: data.map(entry=>entry.show)\n//     }\n// };\n\n// export default Index\nfunction getPosts() {\n    return [\n      { id: 'hello-nextjs', title: 'Hello Next.js' },\n      { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n      { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n    ];\n  }\n  \n  const PostLink = ({ post }) => (\n    <li>\n      <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n        <a>{post.title}</a>\n      </Link>\n    </li>\n  );\n  \n  export default function Blog() {\n    return (\n      <Layout>\n        <h1>My Blog</h1>\n        <ul>\n          {getPosts().map(post => (\n            <PostLink key={post.id} post={post} />\n          ))}\n        </ul>\n        <style jsx>{`\n          h1,\n          a {\n            font-family: 'Arial';\n          }\n  \n          ul {\n            padding: 0;\n          }\n  \n          li {\n            list-style: none;\n            margin: 5px 0;\n          }\n  \n          a {\n            text-decoration: none;\n            color: blue;\n          }\n  \n          a:hover {\n            opacity: 0.6;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n\n"]},"metadata":{},"sourceType":"module"}